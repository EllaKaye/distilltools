% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify_default_highlighting.R
\name{modify_default_highlighting}
\alias{modify_default_highlighting}
\title{Modify the default {distill} syntax highlighting theme}
\usage{
modify_default_highlighting(
  name = "highlighting",
  numbers = NULL,
  strings = NULL,
  functions = NULL,
  control = NULL,
  constant = NULL,
  overwrite = TRUE
)
}
\arguments{
\item{name}{Name of the theme file (will be written as name.theme)}

\item{numbers}{Colour for numbers. Must be either a named colour in \code{\link[grDevices:colors]{grDevices::colors()}} or of the hex form "#RRBBGG". Default is red "#AD0000" (approx "Bright Red").}

\item{strings}{Colour for strings. Must be either a named colour in \code{\link[grDevices:colors]{grDevices::colors()}} or of the hex form "#RRBBGG". Default is green "#20794D" (approx "Eucalyptus").}

\item{functions}{Colour for function names. Must be either a named colour in \code{\link[grDevices:colors]{grDevices::colors()}} or of the hex form "#RRBBGG". Default is purple "#4758AB" (approx "San Marino").}

\item{control}{Colour for control (e.g. \code{if}, \code{while}). Must be either a named colour in \code{\link[grDevices:colors]{grDevices::colors()}} or of the hex form "#RRBBGG". Default is blue "#007BA5" (approx "Deep Cerulean").}

\item{constant}{Colour for constants (e.g. \code{TRUE}, \code{NULL}). Must be either a named colour in \code{\link[grDevices:colors]{grDevices::colors()}} or of the hex form "#RRBBGG". Default is brown "#8F5902" (approx "Chelsea Gem").}

\item{overwrite}{logical. If \code{TRUE} (default), will overwrite \code{name.theme} if it already exists in the working directory.}
}
\description{
Create a syntax highlighting theme by modifying the default from the \{distill\} package and write it to the current working directory.
}
\details{
This is function modifies the default syntax highlighting theme from the \{distill\} package by replacing the five colours used in that scheme with colours of the user's choosing. It is \emph{not} a fully-featured function to create a theme from scratch. However, it does place a \code{.theme} file in your working directory which can be further modified if more customisations are desired. Note that if a hex code in the default is replaced with another hex code, that change in colour is applied. However, if a \code{null} in the default is replaced with a hex code, that colour does \emph{not} show up when the theme is applied.

We strongly recommend that when users choose colours for the syntax highlighting theme to be applied to their Distill website/blog, they take WCAG guidelines for web accessibility into account by ensuring that the colour contrast ratio between each of the colours used and background colour is at least 4.5:1. This can be checked with a tool such as \href{https://webaim.org/resources/contrastchecker/}{WebAIM contrast checker} or in R with \code{\link[savonliquide:check_contrast]{savonliquide::check_contrast()}} or the \code{cr_get_ratio()} function from the \href{https://github.com/matt-dray/coloratio}{\code{coloratio}} package, available on GitHub. We also recommend checking that your palette is colourblind-friendly, for example by using \code{\link[prismatic:check_color_blindness]{prismatic::check_color_blindness()}} function.

There are two ways to apply a custom syntax highlighting scheme to a
Distill site or blog:
\enumerate{
\item Apply it site-wide by adding a \code{theme} key to the top-level of your
\verb{_site.yml} configuration file (assuming the theme file is in your
root directory):\if{html}{\out{<div class="yaml">}}\preformatted{output:
  distill::distill_article:
    highlight: highlighting.theme
}\if{html}{\out{</div>}}
}

At least, that \emph{should} work, but isn’t for the author at the time of
writing. There is an open
\href{https://github.com/rstudio/distill/issues/370}{issue} about this.
\enumerate{
\item Apply to an individual article by adding a \code{theme} key to your
article’s YAML front-matter, using the full path (assuming that the
\code{.theme} file is in the site root directory), e.g.:\if{html}{\out{<div class="yaml">}}\preformatted{---
title: "My Highlighting Theme"
output:
  distill::distill_article:
    highlight: /Users/USER/WEBSITE/highlighting.theme
---
}\if{html}{\out{</div>}}
}

The second option allows for you to apply your theme to individual
articles, while using a different theme for the rest of your site. Note
that this is only possible for stand-alone articles within a website —
you cannot apply a theme to individual blog posts \emph{only}.
}
\examples{
\dontrun{
modify_default_highlighting("my_highlighting",
    "#B6005B", "#008643", "#005BB6", "#5A00B5", "#B65B00")
modify_default_highlighting("base_cols",
    "red", "orange", "yellow", "green", "blue")
}
}
