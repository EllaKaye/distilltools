% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/icons.R
\name{make_icon}
\alias{make_icon}
\alias{icon_link}
\title{Link "buttons" with icons and text}
\usage{
make_icon(icon, style = "default")

icon_link(icon = NULL, text = NULL, url = NULL, style = "default")
}
\arguments{
\item{icon}{The name of the icon. For Font Awesome icons, the name should correspond to the current Version 5 name and can either be the the short name (e.g. \code{"github"}) or the full name (e.g. \code{"fab fa-github"}). \href{https://jpswalsh.github.io/academicons/}{Academicons} can also be used and styled the same way (e.g. \code{"google-scholar"} or \code{"ai ai-google-scholar"}) but require a site header. See \href{https://www.jhelvy.com/posts/2021-03-25-customizing-distill-with-htmltools-and-css/#side-note-on-academic-icons}{here} for details.}

\item{style}{The style of the font awesome icon, which can be "default", "solid" or "regular". This parameter is only used when the short name of the icon is used in the \code{icon} argument and there is more than one style available for that icon. In that case, the default becomes "solid".}

\item{text}{A string of the text to appear on the button}

\item{url}{A url for where the button should link to}
}
\value{
For \code{make_icon}, a \code{shiny.tag} with the HTML \verb{<i class = "icon"></i>}. For \code{icon_link}, a \code{shiny.tag} with the HTML \verb{<a href=url class="icon-link" target = "_blank" rel = "noopener"><i class=icon></i> text</a>}
}
\description{
Easily insert "buttons" with an icon and text into .Rmd documents
}
\details{
Note that it will be necessary to add some CSS to in order to make the "buttons" look like buttons. For the \code{icon_link} function, this can be done by styling the \code{icon-link} class. At a minimum, a border property should be set. For a \code{distill} website, we recommend using the \code{distill::create_theme()} function and writing additional CSS at the bottom of that file. See \href{https://rstudio.github.io/distill/website.html#theming}{here} for details of how to implement that. See \href{https://github.com/jhelvy/jhelvy.com/blob/master/css/jhelvy.css}{here} and \href{https://github.com/EllaKaye/ellakaye-distill/blob/main/emk_theme.css}{here} for examples.

The \code{make_icon} function returns an \verb{<i>} tag, rather than the svg of the icon. This function is designed primarily to be called within \code{icon_link}, so we use the tag rather than the image directly to enable styling by css (in particular that the icon styling can change if hovered over). If you wish to insert an icon directly into your text or into a site header or footer, we recommend using a package that inserts the svg, such as \href{https://rstudio.github.io/fontawesome/}{\strong{fontawesome}} or \href{https://pkg.mitchelloharawild.com/icons/}{\strong{icons}}. This ensures that the icons render offline, and there are also additional styling options available.
}
\examples{
make_icon("images")
make_icon("fas fa-images")
make_icon("far fa-images")
make_icon("images", style = "regular")
icon_link("github", "materials", "https://github.com/USER/REPO")
icon_link("images", "slides", "https://USER.github.io/slides", style = "regular")
}
\author{
John Paul Helveston and Ella Kaye
}
